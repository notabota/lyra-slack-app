generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model message {
  id          BigInt     @id @default(autoincrement())
  type        String
  timestamp   String     @unique
  text        String?
  channelId   BigInt
  channelType String
  eventTs     String
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  parentId    String?
  threadTs    String?
  userId      BigInt
  files       file[]
  user        user       @relation(fields: [userId], references: [id])
  reactions   reaction[]
  channel     channel    @relation(fields: [channelId], references: [id])
}

model file {
  id                 BigInt   @id @default(autoincrement())
  fileId             String
  fileType           String
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
  name               String?
  title              String?
  pretty_type        String
  mimetype           String
  timestamp          BigInt
  userId             BigInt
  size               BigInt
  mode               String
  urlPrivate         String?
  urlPrivateDownload String?
  permalink          String
  messageId          BigInt
  message            message  @relation(fields: [messageId], references: [id])
  user               user     @relation(fields: [userId], references: [id])
}

model reaction {
  id        BigInt   @id @default(autoincrement())
  userId    BigInt
  reaction  String
  itemUser  String
  eventTs   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  messageId BigInt
  message   message  @relation(fields: [messageId], references: [id])
  user      user     @relation(fields: [userId], references: [id])
}

model user {
  id                     BigInt     @id @default(autoincrement())
  userId                 String
  name                   String?
  realName               String?
  displayName            String?
  firstName              String?
  lastName               String?
  teamId                 String?
  isAdmin                Boolean?
  isOwner                Boolean?
  isPrimaryOwner         Boolean?
  isRestricted           Boolean?
  isUltraRestricted      Boolean?
  isBot                  Boolean?
  isEmailConfirmed       Boolean?
  whoCanShareContactCard String?
  color                  String?
  tz                     String?
  phone                  String?
  title                  String?
  image                  String?
  createdAt              DateTime   @default(now())
  updatedAt              DateTime   @updatedAt
  updated                BigInt?
  messages               message[]
  files                  file[]
  reactions              reaction[]
}

model channel {
  id            BigInt    @id @default(autoincrement())
  channelId     String
  name          String?
  updated       BigInt?
  creator       String?
  lastRead      String?
  isChannel     Boolean?
  isGroup       Boolean?
  isIm          Boolean?
  isMpim        Boolean?
  isPrivate     Boolean?
  isArchived    Boolean?
  isGeneral     Boolean?
  isShared      Boolean?
  isOrgShared   Boolean?
  contextTeamId String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  messages      message[]
}
